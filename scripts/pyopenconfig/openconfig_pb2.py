# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: openconfig.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='openconfig.proto',
  package='openconfig',
  syntax='proto3',
  serialized_pb=_b('\n\x10openconfig.proto\x12\nopenconfig\x1a\x19google/protobuf/any.proto\"\x98\x01\n\x0cNotification\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\x12 \n\x06prefix\x18\x02 \x01(\x0b\x32\x10.openconfig.Path\x12\r\n\x05\x61lias\x18\x03 \x01(\t\x12\"\n\x06update\x18\x04 \x03(\x0b\x32\x12.openconfig.Update\x12 \n\x06\x64\x65lete\x18\x05 \x03(\x0b\x32\x10.openconfig.Path\"J\n\x06Update\x12\x1e\n\x04path\x18\x01 \x01(\x0b\x32\x10.openconfig.Path\x12 \n\x05value\x18\x02 \x01(\x0b\x32\x11.openconfig.Value\"\x17\n\x04Path\x12\x0f\n\x07\x65lement\x18\x01 \x03(\t\"D\n\x05Value\x12\r\n\x05value\x18\x01 \x01(\x0c\x12\x1e\n\x04type\x18\x02 \x01(\x0e\x32\x10.openconfig.Type\x12\x0c\n\x04name\x18\x03 \x01(\t\"\x93\x01\n\x10GetModelsRequest\x12\x37\n\x0crequest_type\x18\x01 \x01(\x0e\x32!.openconfig.GetModelsRequest.Type\x12%\n\x05query\x18\x02 \x01(\x0b\x32\x16.openconfig.ModelQuery\"\x1f\n\x04Type\x12\x0b\n\x07SUMMARY\x10\x00\x12\n\n\x06\x44\x45TAIL\x10\x01\">\n\nModelQuery\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tnamespace\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\":\n\x11GetModelsResponse\x12%\n\x06models\x18\x01 \x03(\x0b\x32\x15.openconfig.ModelData\"\xbc\x01\n\tModelData\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tnamespace\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c\x12.\n\nmodel_type\x18\x05 \x01(\x0e\x32\x1a.openconfig.ModelData.Type\"?\n\x04Type\x12\n\n\x06MODULE\x10\x00\x12\n\n\x06\x42UNDLE\x10\x01\x12\x10\n\x0c\x41UGMENTATION\x10\x03\x12\r\n\tDEVIATION\x10\x04\"\xca\x01\n\nGetRequest\x12 \n\x06prefix\x18\x01 \x01(\x0b\x32\x10.openconfig.Path\x12\x1e\n\x04path\x18\x02 \x03(\x0b\x32\x10.openconfig.Path\x12)\n\x04type\x18\x03 \x01(\x0e\x32\x1b.openconfig.GetRequest.Type\x12\x16\n\x0e\x63\x61\x63he_interval\x18\x04 \x01(\x03\"7\n\x04Type\x12\x07\n\x03\x41LL\x10\x00\x12\n\n\x06\x43ONFIG\x10\x01\x12\t\n\x05STATE\x10\x02\x12\x0f\n\x0bOPERATIONAL\x10\x03\"=\n\x0bGetResponse\x12.\n\x0cnotification\x18\x01 \x03(\x0b\x32\x18.openconfig.Notification\"\x99\x01\n\nSetRequest\x12 \n\x06prefix\x18\x01 \x01(\x0b\x32\x10.openconfig.Path\x12 \n\x06\x64\x65lete\x18\x02 \x03(\x0b\x32\x10.openconfig.Path\x12#\n\x07replace\x18\x03 \x03(\x0b\x32\x12.openconfig.Update\x12\"\n\x06update\x18\x04 \x03(\x0b\x32\x12.openconfig.Update\"]\n\x0bSetResponse\x12 \n\x06prefix\x18\x01 \x01(\x0b\x32\x10.openconfig.Path\x12,\n\x08response\x18\x02 \x03(\x0b\x32\x1a.openconfig.UpdateResponse\"\xde\x01\n\x0eUpdateResponse\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\x12\x1e\n\x04path\x18\x02 \x01(\x0b\x32\x10.openconfig.Path\x12\"\n\x07message\x18\x03 \x01(\x0b\x32\x11.openconfig.Error\x12\x30\n\x02op\x18\x04 \x01(\x0e\x32$.openconfig.UpdateResponse.Operation\"C\n\tOperation\x12\x11\n\rNOT_SPECIFIED\x10\x00\x12\n\n\x06\x44\x45LETE\x10\x01\x12\x0b\n\x07REPLACE\x10\x02\x12\n\n\x06UPDATE\x10\x03\"J\n\x05\x45rror\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\"\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x14.google.protobuf.Any\"\xf3\x01\n\x10SubscribeRequest\x12\x31\n\tsubscribe\x18\x01 \x01(\x0b\x32\x1c.openconfig.SubscriptionListH\x00\x12*\n\theartbeat\x18\x02 \x01(\x0b\x32\x15.openconfig.HeartbeatH\x00\x12\'\n\x04poll\x18\x03 \x01(\x0b\x32\x17.openconfig.PollRequestH\x00\x12(\n\x07\x61liases\x18\x04 \x01(\x0b\x32\x15.openconfig.AliasListH\x00\x12\"\n\x05proxy\x18\x05 \x01(\x0b\x32\x13.openconfig.ProxiesB\t\n\x07request\"\xf7\x01\n\x10SubscriptionList\x12 \n\x06prefix\x18\x01 \x01(\x0b\x32\x10.openconfig.Path\x12.\n\x0csubscription\x18\x02 \x03(\x0b\x32\x18.openconfig.Subscription\x12\x13\n\x0buse_aliases\x18\x03 \x01(\x08\x12#\n\x03qos\x18\x04 \x01(\x0b\x32\x16.openconfig.QOSMarking\x12/\n\x04mode\x18\x05 \x01(\x0e\x32!.openconfig.SubscriptionList.Mode\"&\n\x04Mode\x12\n\n\x06STREAM\x10\x00\x12\x08\n\x04ONCE\x10\x01\x12\x08\n\x04POLL\x10\x02\"\xab\x01\n\x0cSubscription\x12\x1e\n\x04path\x18\x01 \x01(\x0b\x32\x10.openconfig.Path\x12*\n\x04mode\x18\x02 \x01(\x0e\x32\x1c.openconfig.SubscriptionMode\x12\x17\n\x0fsample_interval\x18\x03 \x01(\x04\x12\x1a\n\x12suppress_redundant\x18\x04 \x01(\x08\x12\x1a\n\x12heartbeat_interval\x18\x05 \x01(\x04\"\x1d\n\nQOSMarking\x12\x0f\n\x07marking\x18\x01 \x01(\r\"-\n\tAliasList\x12 \n\x05\x61lias\x18\x01 \x03(\x0b\x32\x11.openconfig.Alias\"H\n\x05\x41lias\x12\x1e\n\x04path\x18\x01 \x01(\x0b\x32\x10.openconfig.Path\x12\x1f\n\x05\x61lias\x18\x02 \x01(\x0b\x32\x10.openconfig.Path\"\r\n\x0bPollRequest\"U\n\x07Proxies\x12 \n\x05proxy\x18\x01 \x03(\x0b\x32\x11.openconfig.Proxy\x12\x13\n\x0btarget_name\x18\x02 \x01(\t\x12\x13\n\x0b\x63lient_name\x18\x03 \x01(\t\"&\n\x05Proxy\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x90\x01\n\x11SubscribeResponse\x12*\n\x06update\x18\x01 \x01(\x0b\x32\x18.openconfig.NotificationH\x00\x12*\n\theartbeat\x18\x02 \x01(\x0b\x32\x15.openconfig.HeartbeatH\x00\x12\x17\n\rsync_response\x18\x03 \x01(\x08H\x00\x42\n\n\x08response\"\x1d\n\tHeartbeat\x12\x10\n\x08interval\x18\x01 \x01(\x04\"\x8f\x01\n\nUDPWrapper\x12\x1c\n\x02id\x18\x01 \x01(\x0b\x32\x10.openconfig.Path\x12\x1a\n\x12transmit_timestamp\x18\x02 \x01(\x04\x12\x17\n\x0fsequence_number\x18\x03 \x01(\x04\x12.\n\x0cnotification\x18\x04 \x03(\x0b\x32\x18.openconfig.Notification*&\n\x04Type\x12\x08\n\x04JSON\x10\x00\x12\t\n\x05\x42YTES\x10\x01\x12\t\n\x05PROTO\x10\x02*A\n\x10SubscriptionMode\x12\x12\n\x0eTARGET_DEFINED\x10\x00\x12\r\n\tON_CHANGE\x10\x01\x12\n\n\x06SAMPLE\x10\x02\x32\x94\x02\n\nOpenConfig\x12\x36\n\x03Get\x12\x16.openconfig.GetRequest\x1a\x17.openconfig.GetResponse\x12H\n\tGetModels\x12\x1c.openconfig.GetModelsRequest\x1a\x1d.openconfig.GetModelsResponse\x12\x36\n\x03Set\x12\x16.openconfig.SetRequest\x1a\x17.openconfig.SetResponse\x12L\n\tSubscribe\x12\x1c.openconfig.SubscribeRequest\x1a\x1d.openconfig.SubscribeResponse(\x01\x30\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='openconfig.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='JSON', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BYTES', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROTO', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2958,
  serialized_end=2996,
)
_sym_db.RegisterEnumDescriptor(_TYPE)

Type = enum_type_wrapper.EnumTypeWrapper(_TYPE)
_SUBSCRIPTIONMODE = _descriptor.EnumDescriptor(
  name='SubscriptionMode',
  full_name='openconfig.SubscriptionMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TARGET_DEFINED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ON_CHANGE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAMPLE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2998,
  serialized_end=3063,
)
_sym_db.RegisterEnumDescriptor(_SUBSCRIPTIONMODE)

SubscriptionMode = enum_type_wrapper.EnumTypeWrapper(_SUBSCRIPTIONMODE)
JSON = 0
BYTES = 1
PROTO = 2
TARGET_DEFINED = 0
ON_CHANGE = 1
SAMPLE = 2


_GETMODELSREQUEST_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='openconfig.GetModelsRequest.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUMMARY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DETAIL', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=502,
  serialized_end=533,
)
_sym_db.RegisterEnumDescriptor(_GETMODELSREQUEST_TYPE)

_MODELDATA_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='openconfig.ModelData.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MODULE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BUNDLE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUGMENTATION', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEVIATION', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=785,
  serialized_end=848,
)
_sym_db.RegisterEnumDescriptor(_MODELDATA_TYPE)

_GETREQUEST_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='openconfig.GetRequest.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ALL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONFIG', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATIONAL', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=998,
  serialized_end=1053,
)
_sym_db.RegisterEnumDescriptor(_GETREQUEST_TYPE)

_UPDATERESPONSE_OPERATION = _descriptor.EnumDescriptor(
  name='Operation',
  full_name='openconfig.UpdateResponse.Operation',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NOT_SPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REPLACE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATE', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1525,
  serialized_end=1592,
)
_sym_db.RegisterEnumDescriptor(_UPDATERESPONSE_OPERATION)

_SUBSCRIPTIONLIST_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='openconfig.SubscriptionList.Mode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STREAM', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ONCE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POLL', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2126,
  serialized_end=2164,
)
_sym_db.RegisterEnumDescriptor(_SUBSCRIPTIONLIST_MODE)


_NOTIFICATION = _descriptor.Descriptor(
  name='Notification',
  full_name='openconfig.Notification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='openconfig.Notification.timestamp', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='openconfig.Notification.prefix', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alias', full_name='openconfig.Notification.alias', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='update', full_name='openconfig.Notification.update', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delete', full_name='openconfig.Notification.delete', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=60,
  serialized_end=212,
)


_UPDATE = _descriptor.Descriptor(
  name='Update',
  full_name='openconfig.Update',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='openconfig.Update.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='openconfig.Update.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=214,
  serialized_end=288,
)


_PATH = _descriptor.Descriptor(
  name='Path',
  full_name='openconfig.Path',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='openconfig.Path.element', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=290,
  serialized_end=313,
)


_VALUE = _descriptor.Descriptor(
  name='Value',
  full_name='openconfig.Value',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='openconfig.Value.value', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='openconfig.Value.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='openconfig.Value.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=315,
  serialized_end=383,
)


_GETMODELSREQUEST = _descriptor.Descriptor(
  name='GetModelsRequest',
  full_name='openconfig.GetModelsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request_type', full_name='openconfig.GetModelsRequest.request_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query', full_name='openconfig.GetModelsRequest.query', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _GETMODELSREQUEST_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=386,
  serialized_end=533,
)


_MODELQUERY = _descriptor.Descriptor(
  name='ModelQuery',
  full_name='openconfig.ModelQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='openconfig.ModelQuery.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='openconfig.ModelQuery.namespace', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='openconfig.ModelQuery.version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=535,
  serialized_end=597,
)


_GETMODELSRESPONSE = _descriptor.Descriptor(
  name='GetModelsResponse',
  full_name='openconfig.GetModelsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='models', full_name='openconfig.GetModelsResponse.models', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=599,
  serialized_end=657,
)


_MODELDATA = _descriptor.Descriptor(
  name='ModelData',
  full_name='openconfig.ModelData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='openconfig.ModelData.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='openconfig.ModelData.namespace', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='openconfig.ModelData.version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='openconfig.ModelData.data', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model_type', full_name='openconfig.ModelData.model_type', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _MODELDATA_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=660,
  serialized_end=848,
)


_GETREQUEST = _descriptor.Descriptor(
  name='GetRequest',
  full_name='openconfig.GetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='openconfig.GetRequest.prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='openconfig.GetRequest.path', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='openconfig.GetRequest.type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cache_interval', full_name='openconfig.GetRequest.cache_interval', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _GETREQUEST_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=851,
  serialized_end=1053,
)


_GETRESPONSE = _descriptor.Descriptor(
  name='GetResponse',
  full_name='openconfig.GetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='notification', full_name='openconfig.GetResponse.notification', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1055,
  serialized_end=1116,
)


_SETREQUEST = _descriptor.Descriptor(
  name='SetRequest',
  full_name='openconfig.SetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='openconfig.SetRequest.prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delete', full_name='openconfig.SetRequest.delete', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='replace', full_name='openconfig.SetRequest.replace', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='update', full_name='openconfig.SetRequest.update', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1119,
  serialized_end=1272,
)


_SETRESPONSE = _descriptor.Descriptor(
  name='SetResponse',
  full_name='openconfig.SetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='openconfig.SetResponse.prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='openconfig.SetResponse.response', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1274,
  serialized_end=1367,
)


_UPDATERESPONSE = _descriptor.Descriptor(
  name='UpdateResponse',
  full_name='openconfig.UpdateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='openconfig.UpdateResponse.timestamp', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='openconfig.UpdateResponse.path', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='openconfig.UpdateResponse.message', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='op', full_name='openconfig.UpdateResponse.op', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _UPDATERESPONSE_OPERATION,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1370,
  serialized_end=1592,
)


_ERROR = _descriptor.Descriptor(
  name='Error',
  full_name='openconfig.Error',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='openconfig.Error.code', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='openconfig.Error.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='openconfig.Error.data', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1594,
  serialized_end=1668,
)


_SUBSCRIBEREQUEST = _descriptor.Descriptor(
  name='SubscribeRequest',
  full_name='openconfig.SubscribeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subscribe', full_name='openconfig.SubscribeRequest.subscribe', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='heartbeat', full_name='openconfig.SubscribeRequest.heartbeat', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='poll', full_name='openconfig.SubscribeRequest.poll', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='aliases', full_name='openconfig.SubscribeRequest.aliases', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='proxy', full_name='openconfig.SubscribeRequest.proxy', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='request', full_name='openconfig.SubscribeRequest.request',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1671,
  serialized_end=1914,
)


_SUBSCRIPTIONLIST = _descriptor.Descriptor(
  name='SubscriptionList',
  full_name='openconfig.SubscriptionList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='openconfig.SubscriptionList.prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subscription', full_name='openconfig.SubscriptionList.subscription', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='use_aliases', full_name='openconfig.SubscriptionList.use_aliases', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='qos', full_name='openconfig.SubscriptionList.qos', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mode', full_name='openconfig.SubscriptionList.mode', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SUBSCRIPTIONLIST_MODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1917,
  serialized_end=2164,
)


_SUBSCRIPTION = _descriptor.Descriptor(
  name='Subscription',
  full_name='openconfig.Subscription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='openconfig.Subscription.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mode', full_name='openconfig.Subscription.mode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sample_interval', full_name='openconfig.Subscription.sample_interval', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='suppress_redundant', full_name='openconfig.Subscription.suppress_redundant', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='heartbeat_interval', full_name='openconfig.Subscription.heartbeat_interval', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2167,
  serialized_end=2338,
)


_QOSMARKING = _descriptor.Descriptor(
  name='QOSMarking',
  full_name='openconfig.QOSMarking',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='marking', full_name='openconfig.QOSMarking.marking', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2340,
  serialized_end=2369,
)


_ALIASLIST = _descriptor.Descriptor(
  name='AliasList',
  full_name='openconfig.AliasList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alias', full_name='openconfig.AliasList.alias', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2371,
  serialized_end=2416,
)


_ALIAS = _descriptor.Descriptor(
  name='Alias',
  full_name='openconfig.Alias',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='openconfig.Alias.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alias', full_name='openconfig.Alias.alias', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2418,
  serialized_end=2490,
)


_POLLREQUEST = _descriptor.Descriptor(
  name='PollRequest',
  full_name='openconfig.PollRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2492,
  serialized_end=2505,
)


_PROXIES = _descriptor.Descriptor(
  name='Proxies',
  full_name='openconfig.Proxies',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='proxy', full_name='openconfig.Proxies.proxy', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target_name', full_name='openconfig.Proxies.target_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_name', full_name='openconfig.Proxies.client_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2507,
  serialized_end=2592,
)


_PROXY = _descriptor.Descriptor(
  name='Proxy',
  full_name='openconfig.Proxy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='openconfig.Proxy.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='openconfig.Proxy.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2594,
  serialized_end=2632,
)


_SUBSCRIBERESPONSE = _descriptor.Descriptor(
  name='SubscribeResponse',
  full_name='openconfig.SubscribeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='update', full_name='openconfig.SubscribeResponse.update', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='heartbeat', full_name='openconfig.SubscribeResponse.heartbeat', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sync_response', full_name='openconfig.SubscribeResponse.sync_response', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='response', full_name='openconfig.SubscribeResponse.response',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2635,
  serialized_end=2779,
)


_HEARTBEAT = _descriptor.Descriptor(
  name='Heartbeat',
  full_name='openconfig.Heartbeat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='openconfig.Heartbeat.interval', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2781,
  serialized_end=2810,
)


_UDPWRAPPER = _descriptor.Descriptor(
  name='UDPWrapper',
  full_name='openconfig.UDPWrapper',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='openconfig.UDPWrapper.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transmit_timestamp', full_name='openconfig.UDPWrapper.transmit_timestamp', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sequence_number', full_name='openconfig.UDPWrapper.sequence_number', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='notification', full_name='openconfig.UDPWrapper.notification', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2813,
  serialized_end=2956,
)

_NOTIFICATION.fields_by_name['prefix'].message_type = _PATH
_NOTIFICATION.fields_by_name['update'].message_type = _UPDATE
_NOTIFICATION.fields_by_name['delete'].message_type = _PATH
_UPDATE.fields_by_name['path'].message_type = _PATH
_UPDATE.fields_by_name['value'].message_type = _VALUE
_VALUE.fields_by_name['type'].enum_type = _TYPE
_GETMODELSREQUEST.fields_by_name['request_type'].enum_type = _GETMODELSREQUEST_TYPE
_GETMODELSREQUEST.fields_by_name['query'].message_type = _MODELQUERY
_GETMODELSREQUEST_TYPE.containing_type = _GETMODELSREQUEST
_GETMODELSRESPONSE.fields_by_name['models'].message_type = _MODELDATA
_MODELDATA.fields_by_name['model_type'].enum_type = _MODELDATA_TYPE
_MODELDATA_TYPE.containing_type = _MODELDATA
_GETREQUEST.fields_by_name['prefix'].message_type = _PATH
_GETREQUEST.fields_by_name['path'].message_type = _PATH
_GETREQUEST.fields_by_name['type'].enum_type = _GETREQUEST_TYPE
_GETREQUEST_TYPE.containing_type = _GETREQUEST
_GETRESPONSE.fields_by_name['notification'].message_type = _NOTIFICATION
_SETREQUEST.fields_by_name['prefix'].message_type = _PATH
_SETREQUEST.fields_by_name['delete'].message_type = _PATH
_SETREQUEST.fields_by_name['replace'].message_type = _UPDATE
_SETREQUEST.fields_by_name['update'].message_type = _UPDATE
_SETRESPONSE.fields_by_name['prefix'].message_type = _PATH
_SETRESPONSE.fields_by_name['response'].message_type = _UPDATERESPONSE
_UPDATERESPONSE.fields_by_name['path'].message_type = _PATH
_UPDATERESPONSE.fields_by_name['message'].message_type = _ERROR
_UPDATERESPONSE.fields_by_name['op'].enum_type = _UPDATERESPONSE_OPERATION
_UPDATERESPONSE_OPERATION.containing_type = _UPDATERESPONSE
_ERROR.fields_by_name['data'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_SUBSCRIBEREQUEST.fields_by_name['subscribe'].message_type = _SUBSCRIPTIONLIST
_SUBSCRIBEREQUEST.fields_by_name['heartbeat'].message_type = _HEARTBEAT
_SUBSCRIBEREQUEST.fields_by_name['poll'].message_type = _POLLREQUEST
_SUBSCRIBEREQUEST.fields_by_name['aliases'].message_type = _ALIASLIST
_SUBSCRIBEREQUEST.fields_by_name['proxy'].message_type = _PROXIES
_SUBSCRIBEREQUEST.oneofs_by_name['request'].fields.append(
  _SUBSCRIBEREQUEST.fields_by_name['subscribe'])
_SUBSCRIBEREQUEST.fields_by_name['subscribe'].containing_oneof = _SUBSCRIBEREQUEST.oneofs_by_name['request']
_SUBSCRIBEREQUEST.oneofs_by_name['request'].fields.append(
  _SUBSCRIBEREQUEST.fields_by_name['heartbeat'])
_SUBSCRIBEREQUEST.fields_by_name['heartbeat'].containing_oneof = _SUBSCRIBEREQUEST.oneofs_by_name['request']
_SUBSCRIBEREQUEST.oneofs_by_name['request'].fields.append(
  _SUBSCRIBEREQUEST.fields_by_name['poll'])
_SUBSCRIBEREQUEST.fields_by_name['poll'].containing_oneof = _SUBSCRIBEREQUEST.oneofs_by_name['request']
_SUBSCRIBEREQUEST.oneofs_by_name['request'].fields.append(
  _SUBSCRIBEREQUEST.fields_by_name['aliases'])
_SUBSCRIBEREQUEST.fields_by_name['aliases'].containing_oneof = _SUBSCRIBEREQUEST.oneofs_by_name['request']
_SUBSCRIPTIONLIST.fields_by_name['prefix'].message_type = _PATH
_SUBSCRIPTIONLIST.fields_by_name['subscription'].message_type = _SUBSCRIPTION
_SUBSCRIPTIONLIST.fields_by_name['qos'].message_type = _QOSMARKING
_SUBSCRIPTIONLIST.fields_by_name['mode'].enum_type = _SUBSCRIPTIONLIST_MODE
_SUBSCRIPTIONLIST_MODE.containing_type = _SUBSCRIPTIONLIST
_SUBSCRIPTION.fields_by_name['path'].message_type = _PATH
_SUBSCRIPTION.fields_by_name['mode'].enum_type = _SUBSCRIPTIONMODE
_ALIASLIST.fields_by_name['alias'].message_type = _ALIAS
_ALIAS.fields_by_name['path'].message_type = _PATH
_ALIAS.fields_by_name['alias'].message_type = _PATH
_PROXIES.fields_by_name['proxy'].message_type = _PROXY
_SUBSCRIBERESPONSE.fields_by_name['update'].message_type = _NOTIFICATION
_SUBSCRIBERESPONSE.fields_by_name['heartbeat'].message_type = _HEARTBEAT
_SUBSCRIBERESPONSE.oneofs_by_name['response'].fields.append(
  _SUBSCRIBERESPONSE.fields_by_name['update'])
_SUBSCRIBERESPONSE.fields_by_name['update'].containing_oneof = _SUBSCRIBERESPONSE.oneofs_by_name['response']
_SUBSCRIBERESPONSE.oneofs_by_name['response'].fields.append(
  _SUBSCRIBERESPONSE.fields_by_name['heartbeat'])
_SUBSCRIBERESPONSE.fields_by_name['heartbeat'].containing_oneof = _SUBSCRIBERESPONSE.oneofs_by_name['response']
_SUBSCRIBERESPONSE.oneofs_by_name['response'].fields.append(
  _SUBSCRIBERESPONSE.fields_by_name['sync_response'])
_SUBSCRIBERESPONSE.fields_by_name['sync_response'].containing_oneof = _SUBSCRIBERESPONSE.oneofs_by_name['response']
_UDPWRAPPER.fields_by_name['id'].message_type = _PATH
_UDPWRAPPER.fields_by_name['notification'].message_type = _NOTIFICATION
DESCRIPTOR.message_types_by_name['Notification'] = _NOTIFICATION
DESCRIPTOR.message_types_by_name['Update'] = _UPDATE
DESCRIPTOR.message_types_by_name['Path'] = _PATH
DESCRIPTOR.message_types_by_name['Value'] = _VALUE
DESCRIPTOR.message_types_by_name['GetModelsRequest'] = _GETMODELSREQUEST
DESCRIPTOR.message_types_by_name['ModelQuery'] = _MODELQUERY
DESCRIPTOR.message_types_by_name['GetModelsResponse'] = _GETMODELSRESPONSE
DESCRIPTOR.message_types_by_name['ModelData'] = _MODELDATA
DESCRIPTOR.message_types_by_name['GetRequest'] = _GETREQUEST
DESCRIPTOR.message_types_by_name['GetResponse'] = _GETRESPONSE
DESCRIPTOR.message_types_by_name['SetRequest'] = _SETREQUEST
DESCRIPTOR.message_types_by_name['SetResponse'] = _SETRESPONSE
DESCRIPTOR.message_types_by_name['UpdateResponse'] = _UPDATERESPONSE
DESCRIPTOR.message_types_by_name['Error'] = _ERROR
DESCRIPTOR.message_types_by_name['SubscribeRequest'] = _SUBSCRIBEREQUEST
DESCRIPTOR.message_types_by_name['SubscriptionList'] = _SUBSCRIPTIONLIST
DESCRIPTOR.message_types_by_name['Subscription'] = _SUBSCRIPTION
DESCRIPTOR.message_types_by_name['QOSMarking'] = _QOSMARKING
DESCRIPTOR.message_types_by_name['AliasList'] = _ALIASLIST
DESCRIPTOR.message_types_by_name['Alias'] = _ALIAS
DESCRIPTOR.message_types_by_name['PollRequest'] = _POLLREQUEST
DESCRIPTOR.message_types_by_name['Proxies'] = _PROXIES
DESCRIPTOR.message_types_by_name['Proxy'] = _PROXY
DESCRIPTOR.message_types_by_name['SubscribeResponse'] = _SUBSCRIBERESPONSE
DESCRIPTOR.message_types_by_name['Heartbeat'] = _HEARTBEAT
DESCRIPTOR.message_types_by_name['UDPWrapper'] = _UDPWRAPPER
DESCRIPTOR.enum_types_by_name['Type'] = _TYPE
DESCRIPTOR.enum_types_by_name['SubscriptionMode'] = _SUBSCRIPTIONMODE

Notification = _reflection.GeneratedProtocolMessageType('Notification', (_message.Message,), dict(
  DESCRIPTOR = _NOTIFICATION,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Notification)
  ))
_sym_db.RegisterMessage(Notification)

Update = _reflection.GeneratedProtocolMessageType('Update', (_message.Message,), dict(
  DESCRIPTOR = _UPDATE,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Update)
  ))
_sym_db.RegisterMessage(Update)

Path = _reflection.GeneratedProtocolMessageType('Path', (_message.Message,), dict(
  DESCRIPTOR = _PATH,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Path)
  ))
_sym_db.RegisterMessage(Path)

Value = _reflection.GeneratedProtocolMessageType('Value', (_message.Message,), dict(
  DESCRIPTOR = _VALUE,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Value)
  ))
_sym_db.RegisterMessage(Value)

GetModelsRequest = _reflection.GeneratedProtocolMessageType('GetModelsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETMODELSREQUEST,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.GetModelsRequest)
  ))
_sym_db.RegisterMessage(GetModelsRequest)

ModelQuery = _reflection.GeneratedProtocolMessageType('ModelQuery', (_message.Message,), dict(
  DESCRIPTOR = _MODELQUERY,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.ModelQuery)
  ))
_sym_db.RegisterMessage(ModelQuery)

GetModelsResponse = _reflection.GeneratedProtocolMessageType('GetModelsResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETMODELSRESPONSE,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.GetModelsResponse)
  ))
_sym_db.RegisterMessage(GetModelsResponse)

ModelData = _reflection.GeneratedProtocolMessageType('ModelData', (_message.Message,), dict(
  DESCRIPTOR = _MODELDATA,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.ModelData)
  ))
_sym_db.RegisterMessage(ModelData)

GetRequest = _reflection.GeneratedProtocolMessageType('GetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREQUEST,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.GetRequest)
  ))
_sym_db.RegisterMessage(GetRequest)

GetResponse = _reflection.GeneratedProtocolMessageType('GetResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETRESPONSE,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.GetResponse)
  ))
_sym_db.RegisterMessage(GetResponse)

SetRequest = _reflection.GeneratedProtocolMessageType('SetRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETREQUEST,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.SetRequest)
  ))
_sym_db.RegisterMessage(SetRequest)

SetResponse = _reflection.GeneratedProtocolMessageType('SetResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETRESPONSE,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.SetResponse)
  ))
_sym_db.RegisterMessage(SetResponse)

UpdateResponse = _reflection.GeneratedProtocolMessageType('UpdateResponse', (_message.Message,), dict(
  DESCRIPTOR = _UPDATERESPONSE,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.UpdateResponse)
  ))
_sym_db.RegisterMessage(UpdateResponse)

Error = _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), dict(
  DESCRIPTOR = _ERROR,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Error)
  ))
_sym_db.RegisterMessage(Error)

SubscribeRequest = _reflection.GeneratedProtocolMessageType('SubscribeRequest', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIBEREQUEST,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.SubscribeRequest)
  ))
_sym_db.RegisterMessage(SubscribeRequest)

SubscriptionList = _reflection.GeneratedProtocolMessageType('SubscriptionList', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIPTIONLIST,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.SubscriptionList)
  ))
_sym_db.RegisterMessage(SubscriptionList)

Subscription = _reflection.GeneratedProtocolMessageType('Subscription', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIPTION,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Subscription)
  ))
_sym_db.RegisterMessage(Subscription)

QOSMarking = _reflection.GeneratedProtocolMessageType('QOSMarking', (_message.Message,), dict(
  DESCRIPTOR = _QOSMARKING,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.QOSMarking)
  ))
_sym_db.RegisterMessage(QOSMarking)

AliasList = _reflection.GeneratedProtocolMessageType('AliasList', (_message.Message,), dict(
  DESCRIPTOR = _ALIASLIST,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.AliasList)
  ))
_sym_db.RegisterMessage(AliasList)

Alias = _reflection.GeneratedProtocolMessageType('Alias', (_message.Message,), dict(
  DESCRIPTOR = _ALIAS,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Alias)
  ))
_sym_db.RegisterMessage(Alias)

PollRequest = _reflection.GeneratedProtocolMessageType('PollRequest', (_message.Message,), dict(
  DESCRIPTOR = _POLLREQUEST,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.PollRequest)
  ))
_sym_db.RegisterMessage(PollRequest)

Proxies = _reflection.GeneratedProtocolMessageType('Proxies', (_message.Message,), dict(
  DESCRIPTOR = _PROXIES,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Proxies)
  ))
_sym_db.RegisterMessage(Proxies)

Proxy = _reflection.GeneratedProtocolMessageType('Proxy', (_message.Message,), dict(
  DESCRIPTOR = _PROXY,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Proxy)
  ))
_sym_db.RegisterMessage(Proxy)

SubscribeResponse = _reflection.GeneratedProtocolMessageType('SubscribeResponse', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIBERESPONSE,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.SubscribeResponse)
  ))
_sym_db.RegisterMessage(SubscribeResponse)

Heartbeat = _reflection.GeneratedProtocolMessageType('Heartbeat', (_message.Message,), dict(
  DESCRIPTOR = _HEARTBEAT,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.Heartbeat)
  ))
_sym_db.RegisterMessage(Heartbeat)

UDPWrapper = _reflection.GeneratedProtocolMessageType('UDPWrapper', (_message.Message,), dict(
  DESCRIPTOR = _UDPWRAPPER,
  __module__ = 'openconfig_pb2'
  # @@protoc_insertion_point(class_scope:openconfig.UDPWrapper)
  ))
_sym_db.RegisterMessage(UDPWrapper)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class OpenConfigStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Get = channel.unary_unary(
          '/openconfig.OpenConfig/Get',
          request_serializer=GetRequest.SerializeToString,
          response_deserializer=GetResponse.FromString,
          )
      self.GetModels = channel.unary_unary(
          '/openconfig.OpenConfig/GetModels',
          request_serializer=GetModelsRequest.SerializeToString,
          response_deserializer=GetModelsResponse.FromString,
          )
      self.Set = channel.unary_unary(
          '/openconfig.OpenConfig/Set',
          request_serializer=SetRequest.SerializeToString,
          response_deserializer=SetResponse.FromString,
          )
      self.Subscribe = channel.stream_stream(
          '/openconfig.OpenConfig/Subscribe',
          request_serializer=SubscribeRequest.SerializeToString,
          response_deserializer=SubscribeResponse.FromString,
          )


  class OpenConfigServicer(object):

    def Get(self, request, context):
      """Get requests a single snapshot of specified data.  A Get request may
      contain a hint that the request will be repeated (i.e., polling).
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetModels(self, request, context):
      """GetModels returns information about the YANG models supported by the
      target.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
      """Set is the primary function for sending configuration data to the target.
      It sets the paths contained in the SetRequest to the specified values. If
      any of the paths are invalid, or are read-only, the SetResponse will
      return an error. All paths in the SetRequest must be valid or the entire
      request must be rejected. If a path specifies an internal node, rather than
      a leaf, then the value must be the values of the node's children encoded
      in JSON. Binary data in the tree must be base64 encoded, but if a path
      specifies a leaf of binary type, it may be sent as binary. See SetRequest
      for further explanation on the atomicity and idempotency of a Set
      operation.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request_iterator, context):
      """Subscribe subscribes for streaming updates.  Streaming updates are provided
      as a series of Notifications, each of which update a portion of the tree.
      The initial SubscribeRequest contains a SubscriptionList, described below.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_OpenConfigServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Get': grpc.unary_unary_rpc_method_handler(
            servicer.Get,
            request_deserializer=GetRequest.FromString,
            response_serializer=GetResponse.SerializeToString,
        ),
        'GetModels': grpc.unary_unary_rpc_method_handler(
            servicer.GetModels,
            request_deserializer=GetModelsRequest.FromString,
            response_serializer=GetModelsResponse.SerializeToString,
        ),
        'Set': grpc.unary_unary_rpc_method_handler(
            servicer.Set,
            request_deserializer=SetRequest.FromString,
            response_serializer=SetResponse.SerializeToString,
        ),
        'Subscribe': grpc.stream_stream_rpc_method_handler(
            servicer.Subscribe,
            request_deserializer=SubscribeRequest.FromString,
            response_serializer=SubscribeResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'openconfig.OpenConfig', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaOpenConfigServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Get(self, request, context):
      """Get requests a single snapshot of specified data.  A Get request may
      contain a hint that the request will be repeated (i.e., polling).
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetModels(self, request, context):
      """GetModels returns information about the YANG models supported by the
      target.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Set(self, request, context):
      """Set is the primary function for sending configuration data to the target.
      It sets the paths contained in the SetRequest to the specified values. If
      any of the paths are invalid, or are read-only, the SetResponse will
      return an error. All paths in the SetRequest must be valid or the entire
      request must be rejected. If a path specifies an internal node, rather than
      a leaf, then the value must be the values of the node's children encoded
      in JSON. Binary data in the tree must be base64 encoded, but if a path
      specifies a leaf of binary type, it may be sent as binary. See SetRequest
      for further explanation on the atomicity and idempotency of a Set
      operation.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Subscribe(self, request_iterator, context):
      """Subscribe subscribes for streaming updates.  Streaming updates are provided
      as a series of Notifications, each of which update a portion of the tree.
      The initial SubscribeRequest contains a SubscriptionList, described below.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaOpenConfigStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Get(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Get requests a single snapshot of specified data.  A Get request may
      contain a hint that the request will be repeated (i.e., polling).
      """
      raise NotImplementedError()
    Get.future = None
    def GetModels(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """GetModels returns information about the YANG models supported by the
      target.
      """
      raise NotImplementedError()
    GetModels.future = None
    def Set(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Set is the primary function for sending configuration data to the target.
      It sets the paths contained in the SetRequest to the specified values. If
      any of the paths are invalid, or are read-only, the SetResponse will
      return an error. All paths in the SetRequest must be valid or the entire
      request must be rejected. If a path specifies an internal node, rather than
      a leaf, then the value must be the values of the node's children encoded
      in JSON. Binary data in the tree must be base64 encoded, but if a path
      specifies a leaf of binary type, it may be sent as binary. See SetRequest
      for further explanation on the atomicity and idempotency of a Set
      operation.
      """
      raise NotImplementedError()
    Set.future = None
    def Subscribe(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """Subscribe subscribes for streaming updates.  Streaming updates are provided
      as a series of Notifications, each of which update a portion of the tree.
      The initial SubscribeRequest contains a SubscriptionList, described below.
      """
      raise NotImplementedError()


  def beta_create_OpenConfig_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('openconfig.OpenConfig', 'Get'): GetRequest.FromString,
      ('openconfig.OpenConfig', 'GetModels'): GetModelsRequest.FromString,
      ('openconfig.OpenConfig', 'Set'): SetRequest.FromString,
      ('openconfig.OpenConfig', 'Subscribe'): SubscribeRequest.FromString,
    }
    response_serializers = {
      ('openconfig.OpenConfig', 'Get'): GetResponse.SerializeToString,
      ('openconfig.OpenConfig', 'GetModels'): GetModelsResponse.SerializeToString,
      ('openconfig.OpenConfig', 'Set'): SetResponse.SerializeToString,
      ('openconfig.OpenConfig', 'Subscribe'): SubscribeResponse.SerializeToString,
    }
    method_implementations = {
      ('openconfig.OpenConfig', 'Get'): face_utilities.unary_unary_inline(servicer.Get),
      ('openconfig.OpenConfig', 'GetModels'): face_utilities.unary_unary_inline(servicer.GetModels),
      ('openconfig.OpenConfig', 'Set'): face_utilities.unary_unary_inline(servicer.Set),
      ('openconfig.OpenConfig', 'Subscribe'): face_utilities.stream_stream_inline(servicer.Subscribe),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_OpenConfig_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('openconfig.OpenConfig', 'Get'): GetRequest.SerializeToString,
      ('openconfig.OpenConfig', 'GetModels'): GetModelsRequest.SerializeToString,
      ('openconfig.OpenConfig', 'Set'): SetRequest.SerializeToString,
      ('openconfig.OpenConfig', 'Subscribe'): SubscribeRequest.SerializeToString,
    }
    response_deserializers = {
      ('openconfig.OpenConfig', 'Get'): GetResponse.FromString,
      ('openconfig.OpenConfig', 'GetModels'): GetModelsResponse.FromString,
      ('openconfig.OpenConfig', 'Set'): SetResponse.FromString,
      ('openconfig.OpenConfig', 'Subscribe'): SubscribeResponse.FromString,
    }
    cardinalities = {
      'Get': cardinality.Cardinality.UNARY_UNARY,
      'GetModels': cardinality.Cardinality.UNARY_UNARY,
      'Set': cardinality.Cardinality.UNARY_UNARY,
      'Subscribe': cardinality.Cardinality.STREAM_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'openconfig.OpenConfig', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
